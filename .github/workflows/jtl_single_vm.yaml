name: JTL Single VM
on:
  workflow_dispatch:
    inputs:
      clusterName:
        description: 'Cluster name'
        default: 'bal-perf-cluster-test'
        required: false
jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        vm_count: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]
        payload: [50]
        users: [1]
    timeout-minutes: 600
    env:
      TEST_NAME: "netty_hello"
      TEST_ROOT: "tests"
    steps:
    - name: CHECKOUT
      uses: actions/checkout@v2
    - name: AZURE LOGIN
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.PRIVATE_KEY }}
        name: id_rsa # optional
        known_hosts: unnecessary
        if_key_exists: replace # replace / ignore / fail; optional (defaults to fail)
    - name: Configure AKS
      uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: '${{ github.event.inputs.clusterName }}'
        resource-group: ${{ secrets.CLUSTER_RESOURCE_GROUP }}
    - name: Deploy artifacts
      run: |
        kubectl apply -f ${TEST_ROOT}/${TEST_NAME}/k8s.yaml
    - name: Write values to outputs
      id: write
      run: |
        echo "::set-output name=cluster-ip::$(kubectl get service nginx-ingress-ingress-nginx-controller --namespace ingress-basic -w  \
                                              -o 'go-template={{with .status.loadBalancer.ingress}}{{range .}}{{.ip}}{{"\n"}}{{end}}{{.err}}{{end}}' 2>/dev/null \
                                              | head -n1)"
        echo "::set-output name=scenario-name::${TEST_NAME}"
    - name: Wait for VM instance
      run: sleep 60s
      shell: bash
    - name: Execute performance tests
      uses: appleboy/ssh-action@master
      env: 
        IP: ${{ steps.write.outputs.cluster-ip }}
        SCENARIO_NAME: ${{ steps.write.outputs.scenario-name }}
        PAYLOAD: ${{ matrix.payload }}
        USERS: ${{ matrix.users }}
      with:
        host: ${{secrets.VM_IP}}
        username: ${{ secrets.VM_USER }}
        key: ${{ secrets.PRIVATE_KEY }}
        envs: IP,SCENARIO_NAME,PAYLOAD,USERS
        command_timeout: '180m' #3 hours
        timeout: 300s #5 mins
        script: |
          source /etc/profile.d/10-perf-vm.sh
          execute-tests.sh -c $IP -s $SCENARIO_NAME -p $PAYLOAD -u $USERS
    - name: copy file to host
      run: |
          ls -la
          scp -r -v -o StrictHostKeyChecking=no ${{ secrets.VM_USER }}@${{ secrets.VM_IP }}:uploads uploads
    - name: Gather Serverside metrics
      run: |
          sudo chmod -R 777 $(pwd)/"uploads"
          results_dir=$(pwd)/"uploads/results"
          echo ${results_dir}
          ls -la ${results_dir}
          sudo rm ${results_dir}/original-warmup.jtl
          sudo rm ${results_dir}/original-measurement.jtl
          pwd
          start_time=$(cat ${results_dir}/test_start_time_utc)
          end_time=$(cat ${results_dir}/test_end_time_utc)
          util_dir=$(pwd)/"base-image/utils/server-side-data-collector/"
          bash base-image/utils/server-side-data-collector/generate-static-reports.sh ${{ secrets.CLIENT_ID }} ${{ secrets.CLIENT_SECRET }} "${{ github.event.inputs.clusterName }}" ${{ secrets.CLUSTER_RESOURCE_GROUP }} ${{ secrets.SUBSCRIPTION_ID }} ${util_dir} ${{ secrets.TENANT_ID }} ${results_dir} ${{ secrets.WORKSPACE_ID }} ${start_time} ${end_time}
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ github.event.inputs.clusterName }}-${{ matrix.vm_count }}
        path: uploads/results
    - name: Undeploy artifacts
      if: always()
      run: |
        kubectl delete -f ${TEST_ROOT}/${TEST_NAME}/k8s.yaml